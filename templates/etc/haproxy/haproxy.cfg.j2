#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
        log /dev/log    local0 debug
        log /dev/log    local1 notice
        # chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        crt-base /etc/letsencrypt/live

        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL). This list is from:
        #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
        ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
        # ssl-default-bind-ciphers RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS
        ssl-default-bind-options force-tlsv12

        tune.ssl.default-dh-param 2048


defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        option  forwardfor
        option http-keep-alive
        timeout connect 5s
        timeout client  50s
        timeout server  500s
        timeout tunnel  86400s
        balance roundrobin
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http


frontend http
        bind *:80
        mode http

        {% if redirect_http %}

        http-request set-header X-Forwarded-Scheme http
        redirect scheme https code 301 if !{ ssl_fc }

frontend https
        bind *:443 ssl{% for backend, config in haproxy_backends.items() if config.letsencrypt %} crt {{ config['domain'] }}/privkeyandcert.pem{% endfor %}{% for incoming, config in haproxy_redirects.items() if config.letsencrypt %} crt {{ config['domain'] }}/privkeyandcert.pem{% endfor %}


        http-request set-header X-Forwarded-Scheme https
        http-response set-header Strict-Transport-Security max-age=31536000;includeSubDomains;preload
        http-response set-header X-Content-Type-Options nosniff
        http-response set-header X-XSS-Protection 1;mode=block
        http-response set-header X-Robots-Tag none
        http-response set-header X-Download-Options noopen
        http-response set-header X-Permitted-Cross-Domain-Policies none
        {% endif %}

        acl letsencrypt-acl path_beg /.well-known/acme-challenge/
        use_backend srv-letsencrypt if letsencrypt-acl
        {% for name, config in haproxy_redirects.items() %}

        acl is_{{ config['domain'] }} hdr_beg(host) -i {{ config['domain'] }}
        redirect prefix {{ config['destination'] }} if is_{{ config['domain'] }}
        {% endfor %}
        {% for backend, config in haproxy_backends.items() %}

        acl is_{{ config['domain'] }} hdr_beg(host) -i {{ config['domain'] }}
        use_backend srv-{{ backend }} if is_{{ config['domain'] }}
        {% endfor %}

        default_backend srv-{{ default_backend }}
frontend stats
        bind {{ haproxy_stats_ip }}:{{ haproxy_stats_port }}
        mode http
        stats realm Haproxy\ Statistics
        stats uri /

backend srv-letsencrypt

        server letsencrypt 127.0.0.1:{{ certbot_port }}

{% for backend, config in haproxy_backends.items() %}

backend srv-{{ backend }}
    {% if 'custom' in config  %}

        {{ config['custom'] }}
    {% endif %}
    {% for name, server in config['servers'].items() %}

        server {{ name }} {{ server }} check
    {% endfor %}
{% endfor %}
